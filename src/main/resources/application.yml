spring:
  profiles:
    active:
      - development
    group:
      development:
        - common
        - development_database
        - port_8080
      production-1:
        - common
        - production_database
        - port_9001
      production-2:
        - common
        - production_database
        - port_9002

---

spring:
  config:
    activate:
      on-profile: common
  mail:
    host: smtp.gmail.com
    port: 587
    username: ${MAIL_USER_NAME}
    password: ${MAIL_PASSWORD}
    properties:
      mail:
        smtp:
          auth: true
          timeout: 10000
          starttls:
            enable: true
        mime:
          charset: UTF-8
  security:
    oauth2:
      client:
        registration:
          kakao:
            client-id: ${CLIENT_ID}
            client-secret: ${CLIENT_SECRET}
            redirect-uri: ${spring.domain.frontend}/login/oauth2/kakao
            authorization-grant-type: authorization_code
            client-authentication-method: POST
            client-name: Kakao
            scope:
              - profile_nickname
              - profile_image
              - account_email
              - gender
              - age_range
              - birthday
        provider:
          kakao:
            authorization-uri: https://kauth.kakao.com/oauth/authorize
            token-uri: https://kauth.kakao.com/oauth/token
            user-info-uri: https://kapi.kakao.com/v2/user/me
            user-name-attribute: id
  servlet:
    multipart:
      enabled: true
      max-file-size: 5MB
      max-request-size: 5MB


cloud:
  aws:
    s3:
      bucket: ${BUCKET_NAME}
    credentials:
      accessKey: ${BUCKET_ACCESSKEY}
      secretKey: ${BUCKET_SECRETKEY}
    region:
      static: ${BUCKET_REGION}
      auto: ${BUCKET_REGION_AUTO}
    stack:
      auto: ${BUCKET_STACK}

logging:
  level:
    org.hibernate:
      type:
        descriptor.sql: trace

AES:
  PRIVATE_KEY: ${PRIVATE_KEY}

---

spring:
  config:
    activate:
      on-profile: development_database
  datasource:
    url: ${SPRING_DATASOURCE_URL}
    username: ${SPRING_DATASOURCE_USERNAME}
    password: ${SPRING_DATASOURCE_PASSWORD}
    driver-class-name: com.mysql.cj.jdbc.Driver
  jpa:
    defer-datasource-initialization: true
    hibernate.ddl-auto: update
    show-sql: true
    open-in-view: false
    properties:
      hibernate:
        default_batch_fetch_size: 100
        format_sql: true
        use_sql_comments: true
        show_sql: true
    sql.init.mode: alway
  redis:
    host: localhost
    port: 6379
    topic:
      expired: __keyevent@*__:expired
  domain:
    backend: http://localhost:8080
    frontend: http://localhost:3000

bizLog:
  logging:
    dir: ${SPRING_LOGGING_DIR}
    level: INFO

---

spring:
  config:
    activate:
      on-profile: production_database
  jpa:
    database: MYSQL
    show-sql: true
    database-platform: org.hibernate.dialect.MySQL8Dialect
    hibernate:
      ddl-auto: update
    open-in-view: false
  datasource:
    url: jdbc:mysql://${RDS_HOSTNAME}:${RDS_PORT}/${RDS_DB_NAME}
    username: ${RDS_USERNAME}
    password: ${RDS_PASSWORD}
  redis:
    host: bizsurvey.shop
    port: 6379
    password: ${REDIS_PASSWORD}
    topic:
      expired: __keyevent@*__:expired
  domain:
    backend: http://bizsurvey.shop/api/
    frontend: http://bizsurvey.shop

bizLog:
  logging:
    dir: ${SPRING_LOGGING_DIR}
    level: INFO

---

spring:
  config:
    activate:
      on-profile: port_8080

server:
  port: 8080

---

spring:
  config:
    activate:
      on-profile: port_9001

server:
  servlet:
    context-path: /api
  port: 9001

---

spring:
  config:
    activate:
      on-profile: port_9002

server:
  servlet:
    context-path: /api
  port: 9002